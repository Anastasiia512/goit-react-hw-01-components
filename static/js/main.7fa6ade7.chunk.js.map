{"version":3,"sources":["components/profile/styles.module.css","components/friends-list/styles.module.css","components/profile/Profile.jsx","components/statistics/Statistics.jsx","components/statistics/color-picker.js","components/statistics/colors.js","components/friends-list/index.jsx","components/transactions/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","StyledLi","styled","li","colors","min","max","length","Math","floor","random","colorPicker","Statistics","title","map","id","percentage","key","FriendList","friends","friendList","isOnline","item","status","statusOff","width","TransactionHistory","items","type","amount","currency","App","props","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fa6ade7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"styles_profile__2qQj0\",\"description\":\"styles_description__1aSad\",\"avatar\":\"styles_avatar__2YAyc\",\"stats\":\"styles_stats__hZuM0\",\"name\":\"styles_name__1UvLO\",\"tag\":\"styles_tag__2Xo9h\",\"location\":\"styles_location__3zK8n\",\"label\":\"styles_label__3EiNO\",\"quantity\":\"styles_quantity__NZTxz\",\"statsItem\":\"styles_statsItem__ik-6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"styles_friendList__1_F8x\",\"item\":\"styles_item__2iCzr\",\"status\":\"styles_status__1r0C-\",\"statusOff\":\"styles_statusOff__36GDn styles_status__1r0C-\",\"avatar\":\"styles_avatar__TMJC0\",\"name\":\"styles_name__2b5ya\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './styles.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: propTypes.string.isRequired,\n  tag: propTypes.string.isRequired,\n  location: propTypes.string.isRequired,\n  avatar: propTypes.string.isRequired,\n  stats: propTypes.shape({\n    followers: propTypes.number.isRequired,\n    views: propTypes.number.isRequired,\n    likes: propTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './styles.scss';\r\nimport { colorPicker } from './color-picker';\r\nimport { colors } from './colors';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLi = styled.li`\r\n  background-color: ${colorPicker(colors)};\r\n`;\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className=\"statistics\">\r\n    {title && <h2 className=\"title\">{title}</h2>}\r\n    <ul className=\"stat-list\">\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <StyledLi key={id} className=\"item\">\r\n          <span className=\"label\">{label}</span>\r\n          <span className=\"percentage\">{percentage}%</span>\r\n        </StyledLi>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: propTypes.string,\r\n  stats: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string.isRequired,\r\n      label: propTypes.string.isRequired,\r\n      percentage: propTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const colorPicker = (colors) => colors[randomIntegerFromInterval(0, colors.length)];\r\n","export const colors = ['#4ec5f8', '#a43cf3', '#e64c66', '#20b8c5', '#FF9800'];","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styles from './styles.module.css';\r\n\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map(({id, name, avatar, isOnline}) => (\r\n      <li key={id} className={styles.item}>\r\n        <span\r\n          className={isOnline ? styles.status : styles.statusOff}\r\n        ></span>\r\n        <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n        <p className={styles.name}>{name}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      avatar: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      isOnline: propTypes.bool.isRequired,\r\n      id: propTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport './styles.scss';\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string.isRequired,\r\n      type: propTypes.string.isRequired,\r\n      amount: propTypes.string.isRequired,\r\n      currency: propTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from '../profile/Profile';\r\nimport user from '../../db/user.json';\r\nimport statisticalData from '../../db/statistical-data.json';\r\nimport Statistics from '../statistics/Statistics';\r\nimport friends from '../../db/friends-list.json';\r\nimport FriendList from '../friends-list/index';\r\nimport transactions from '../../db/transactions.json';\r\nimport TransactionHistory from '../transactions/index';\r\n\r\n\r\nconst App = props => (\r\n  <>\r\n    <Profile\r\n      name={user.name}\r\n      tag = {user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <Statistics title = \"Upload stats\" stats = {statisticalData}/>\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transactions}/>\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/index.jsx';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}